{"version":3,"sources":["BooksAPI.js","BookshelfChanger.js","Book.js","Bookshelf.js","Bookcase.js","OpenSearchButton.js","ListBooks.js","SearchResults.js","CloseSearchButton.js","SearchBooksInput.js","SearchBar.js","SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","BookshelfChanger","state","value","_this","props","handleChange","event","target","setState","onMove","react_default","a","createElement","className","this","onChange","disabled","Component","Book","_ref","style","width","height","backgroundImage","imageLinks","thumbnail","src_BookshelfChanger","title","authors","join","Bookshelf","booksOnThisShelf","filter","key","name","map","src_Book","Bookcase","bookshelves","src_Bookshelf","OpenSearchButton","react_router_dom","to","ListBooks","_this$props","src_Bookcase","src_OpenSearchButton","SearchResults","searchBooks","myBooks","updatedBooks","b","CloseSearchButton","onResetSearch","onClick","SearchBooksInput","val","onSearch","type","placeholder","autoFocus","SearchBar","src_CloseSearchButton","src_SearchBooksInput","SearchBooks","src_SearchBar","src_SearchResults","BooksApp","error","componentDidMount","BooksAPI","catch","err","console","log","moveBook","prevState","searchForBooks","debounce","length","resetSearch","_this2","_this$state","react_router","exact","path","render","src_ListBooks","src_SearchBooks","ReactDOM","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d1899b6.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\n\nclass BookshelfChanger extends Component {\n  state = {\n    value: this.props.shelf,\n  };\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState({ value });\n    this.props.onMove(this.props.book, value);\n  };\n  render() {\n    return (\n      <div className=\"book-shelf-changer\">\n        <select value={this.state.value} onChange={this.handleChange}>\n          <option value=\"move\" disabled>\n            Move to...\n          </option>\n          <option value=\"currentlyReading\">Currently Reading</option>\n          <option value=\"wantToRead\">Want to Read</option>\n          <option value=\"read\">Read</option>\n          <option value=\"none\">None</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default BookshelfChanger;","import React from 'react';\nimport BookshelfChanger from './BookshelfChanger';\n\n\n\nconst Book = ({ book, shelf, onMove }) => (\n  <li>\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div\n          className=\"book-cover\"\n          style={{\n            width: 128,\n            height: 193,\n            backgroundImage: `url(${\n              book.imageLinks\n                ? book.imageLinks.thumbnail\n                : 'icons/book-placeholder.svg'\n            })`\n          }}\n          />\n          <BookshelfChanger book={book} shelf={shelf} onMove={onMove} />\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">\n        {book.authors ? book.authors.join(', ') : 'Unknown Author'}\n        </div>\n      </div>\n  </li>\n);\n\nexport default Book;","import React from 'react';\nimport Book from './Book';\n\nconst Bookshelf = props => {\n  const { shelf, books, onMove } = props;\n  const booksOnThisShelf = books.filter(book => book.shelf === shelf.key);\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{shelf.name}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {booksOnThisShelf.map(book => (\n            <Book key={book.id} book={book} shelf={shelf.key} onMove={onMove} />\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Bookshelf;","import React from 'react';\nimport Bookshelf from './Bookshelf';\n\nconst Bookcase = props => {\n    const { bookshelves, books, onMove } = props;\n    return (\n      <div className=\"list-books-content\">\n        <div>\n          {bookshelves.map(shelf => (\n            <Bookshelf\n              key={shelf.key}\n              shelf={shelf}\n              books={books}\n              onMove={onMove}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  export default Bookcase;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst OpenSearchButton = () => {\n  return (\n    <div className=\"open-search\">\n      <Link to=\"search\">\n        <button>Add a Book</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default OpenSearchButton;\n","import React, { Component } from 'react';\nimport Bookcase from './Bookcase';\nimport OpenSearchButton from './OpenSearchButton';\n\nclass ListBooks extends Component {\n    render() {\n      const { bookshelves, books, onMove } = this.props;\n      return (\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <Bookcase bookshelves={bookshelves} books={books} onMove={onMove} />\n          <OpenSearchButton />\n        </div>\n      );\n    }\n  }\n\n  export default ListBooks;","import React from 'react';\nimport Book from './Book';\n\nconst SearchResults = props => {\n  const { searchBooks, myBooks, onMove } = props;\n\n  const updatedBooks = searchBooks.map(book => {\n    myBooks.map(b => {\n      if (b.id === book.id) {\n        book.shelf = b.shelf;\n      }\n      return b;\n    });\n    return book;\n  });\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">\n        {updatedBooks.map(book => (\n          <Book\n            key={book.id}\n            book={book}\n            shelf={book.shelf ? book.shelf : 'none'}\n            onMove={onMove}\n          />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default SearchResults;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CloseSearchButton = props => {\n  const { onResetSearch } = props;\n  return (\n    <Link to=\"/\">\n      <button className=\"close-search\" onClick={onResetSearch}>\n        Close\n      </button>\n    </Link>\n  );\n};\n\nexport default CloseSearchButton;","import React, { Component } from 'react';\n\nclass SearchBooksInput extends Component {\n  state = {\n    value: '',\n  };\n  handleChange = event => {\n    const val = event.target.value;\n    this.setState({ value: val }, () => {\n      this.props.onSearch(val);\n    });\n  };\n  render() {\n    return (\n      <div className=\"search-books-input-wrapper\">\n        <input\n          type=\"text\"\n          value={this.state.value}\n          placeholder=\"Search by title or author\"\n          onChange={this.handleChange}\n          autoFocus\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBooksInput;","import React from 'react';\nimport CloseSearchButton from './CloseSearchButton';\nimport SearchBooksInput from './SearchBooksInput';\n\nconst SearchBar = props => {\n  const { onSearch, onResetSearch } = props;\n  return (\n    <div className=\"search-books-bar\">\n      <CloseSearchButton onResetSearch={onResetSearch} />\n      <SearchBooksInput onSearch={onSearch} />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport SearchResults from './SearchResults';\nimport SearchBar from './SearchBar';\n\nclass SearchBooks extends Component {\n  render() {\n    const {\n      searchBooks,\n      myBooks,\n      onSearch,\n      onResetSearch,\n      onMove,\n    } = this.props;\n    return (\n      <div className=\"search-books\">\n        <SearchBar onSearch={onSearch} onResetSearch={onResetSearch} />\n        <SearchResults\n          searchBooks={searchBooks}\n          myBooks={myBooks}\n          onMove={onMove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchBooks;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { debounce } from 'throttle-debounce';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport ListBooks from './ListBooks'\nimport SearchBooks from './SearchBooks'\n\n\n \n\nclass BooksApp extends Component {\n  \n  bookshelves = [\n    { key: 'currentlyReading', name: 'Currently Reading' },\n    { key: 'wantToRead', name: 'Want to Read' },\n    { key: 'read', name: 'Read' },\n  ];\n\n  state = {\n    myBooks: [],\n    searchBooks: [],\n    error: false\n  };\n  \n  componentDidMount = () => {\n    BooksAPI.getAll()\n      .then(books => {\n        this.setState({ myBooks: books });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ error: true });\n      });\n  };\n\n  moveBook = (book, shelf) => {\n    BooksAPI.update(book, shelf).catch(err => {\n      console.log(err);\n      this.setState({ error: true });\n    });\n    if (shelf === 'none') {\n      this.setState(prevState => ({\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id)\n      }));\n    } else {\n      book.shelf = shelf;\n      this.setState(prevState => ({\n        myBooks: prevState.myBooks.filter(b => b.id !== book.id).concat(book)\n      }));\n    }\n  };\n\n  searchForBooks = debounce(300, false, query => {\n    // console.log(query);\n    if (query.length > 0) {\n      BooksAPI.search(query).then(books => {\n        // console.log('result', books);\n        if (books.error) {\n          this.setState({ searchBooks: [] });\n        } else {\n          this.setState({ searchBooks: books });\n        }\n      });\n    } else {\n      this.setState({ searchBooks: [] });\n    }\n  });\n  resetSearch = () => {\n    this.setState({ searchBooks: [] });\n  };\n\n  render() {\n    const { myBooks, searchBooks, error } = this.state;\n    if (error) {\n      return <div>Network error. Please try again later.</div>;\n    }\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <ListBooks\n              bookshelves={this.bookshelves}\n              books={myBooks}\n              onMove={this.moveBook}\n            />\n          )}\n        />\n        <Route\n          exact path='/'\n          render={() => (\n            <SearchBooks\n              searchBooks={searchBooks}\n              myBooks={myBooks}\n              onSearch={this.searchForBooks}\n              onMove={this.moveBook}\n              onResetSearch={this.resetSearch}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'))\n"],"sourceRoot":""}